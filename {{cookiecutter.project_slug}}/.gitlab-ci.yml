image: "python:3.10.4"

cache:
  paths:
    - .venv

before_script: &default_before_script
  - python --version
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - poetry install

stages:
  - lint
  - test
  - deploy

variables:
  POSTGRES_USER: 'climatica_api'
  POSTGRES_PASSWORD: 'SuperTajneHaslo123'
  POSTGRES_DB: 'test_climatica_api'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

flake8:
  stage: lint
  script:
    - make flake8

black:
  stage: lint
  script:
  - make black

isort:
  stage: lint
  script:
  - make isort

mypy:
  stage: lint
  allow_failure: true
  before_script:
    - *default_before_script
    - apt update -y
    - apt install libgdal-dev postgis postgresql-13-postgis-3-scripts -y
  script:
  - make mypy

radon:
  stage: lint
  allow_failure: true
  script:
  - make radon

test:
  stage: test
  services:
    - postgis/postgis
  before_script:
    - *default_before_script
    - apt update -y
    - apt install libgdal-dev postgis postgresql-13-postgis-3-scripts -y
  variables:
    DATABASE_URL: postgis://$POSTGRES_USER:$POSTGRES_PASSWORD@postgis__postgis/$POSTGRES_DB
  script:
    - make test
